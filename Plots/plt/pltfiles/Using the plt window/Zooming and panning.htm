<html>
<head>
<title>Zooming and panning</title>
<style>
<!--
span.mcode
{ color: #ff0000;
  font-family: 'Lucida Console', 'Andale Mono', 'Courier New', monospace;
}
span.mcode2
{ color: #ff0000;
  font-family: 'Times New Roman', serif;
}
-->
</style>
</head>
<body>

<img src="../images/plt.png" width="300" height="160" align="right"></td>
<br><h1>Zooming and panning</h1> <br clear="left"><br><br>

<h3>Panning</h3>

The simplest way to pan the x or y axis is to click on one of the axis tick 
labels (actually anywhere outside the plot area will work) and drag it until the 
part of the display you wish to view is visible. Sometimes you may want to pan 
both the x and y axes at the same time. Instead of doing separate pans on each 
axis you can do both at the same time by clicking anywhere in the plot area (but 
NOT on any of the traces) and dragging that point until the desired view is 
achieved. Yet another way to pan the x axis is to use the optional x-axis cursor 
slider that is described in the next section (<a href="Cursoring.htm">cursoring</a>)
One panning issue you should be aware of is that its performance
will suffer when plotting very large arrays. For example, try the following command:
<br><br>
<span class="mcode">plt(humps((1:1e6)/1e6)'*(1:4));</span>
<br><br>
This will plot 4 traces each of which contains a million points. (These vectors
are far bigger than what you will usually want to plot.) The display update rate
while panning this plot on my 2011 era desktop computer is about 3 times per second,
which is noticeably jerky but certainly useable. However if you want to plot even
more data than this it may make sense to decimate it before plotting. Your eye won't
know the difference by the time you are plotting more than a couple of hundred points
per trace, so you won't really be missing anything unless you zoom in dramatically.

<h3>Zooming</h3>

Try the same thing as with panning, except drag with the right mouse button 
instead of the left. You will find that dragging towards the origin compresses 
the axis (for zooming out) and dragging away from the origin expands the axis 
(for zooming in). As with panning you can zoom both axes at once by a right 
click and drag in the plot area. (Unlike panning you don't have to worry about 
whether you are on a trace or not. The same thing will happen in either case.)
<br><br>
Often to get the desired view requires two mouse movements. The first, with a 
right click and drag to expand or contract the axis (or axes) and the second, 
with a left click, to re-center the display. You may find that this is the most 
convenient method, or perhaps you will like one of the six other methods described 
below.

<h3>The expansion box</h3>

<img src="../images/ExpansionBox.png" align="left" hspace="10" vspace="10">
<br>If the portion of the graph that you want to zoom in on is completely visible 
on the graph, the fastest way of displaying the desired area is to draw an 
expansion box. To do this, position the mouse in the plot area over one corner 
of the area you wish to zoom in on. Then click both mouse buttons at the same 
time, holding them both down while dragging the mouse towards the opposite corner
of the desired zoom area. A 
yellow box will be drawn, which will be stretched or contracted as you drag the 
mouse around. When you let go of the mouse, the display will look similar 
to the picture to the left. If you are happy with the expansion box you have 
drawn, left click the mouse anywhere in the plot area (or even outside the plot 
area if you avoid the edit boxes) and the display will expand to show only the 
data inside the expansion box. If you are not happy with the expansion box, 
right click anywhere. The expansion box will disappear and you can try again.
<br><br>
If you don't like using the right mouse button (or you don't have one) here 
is an alternate method: Double click the left mouse button, but don't release 
the button after the second click. Hold the mouse button down while you drag to 
create the expansion box. Note that if plt was called with the
<span class="mcode">MotionZoom</span> parameter, the function specified with 
that parameter can cause additional text, plots or other visual effects to 
appear and be modified as you adjust the size of the expansion box. (See
<a href="../Programming%20with%20plt/Cursor%20commands.htm">Mouse Motion Functions</a>)
<br clear="left">


<h3>Typing axis limits</h3>

<img src="../images/TypingLimits.png" align="left" hspace="10" vspace="10">
<br>The most general way of setting the axis limits is to simply type them in. Although 
this is perhaps the most painstaking method it is appropriate when 
you wish to have an exact value for one or more of the limits. As an example, 
suppose you want to change the x-axis limits. First click on the grey &quot;x&quot; label 
in front of the x-cursor edit box. When you do that, the edit box doubles up - 
i.e. you see two edit boxes as in the picture to the left. And instead of 
containing cursor values, these two edit boxes will be set to the current lower 
and upper x-axis limits. Highlight one of the numbers in either edit box (by 
double clicking on it, or by a single click and drag) and type in a new number 
to replace the old (or single click and use the usual editing keys - arrows, 
delete, etc). Press enter to accept the new number. Tab also accepts the new 
number and then pops you into the opposite edit box allowing you to edit the 
other limit. If the new limits you are typing are inside the current plot area, 
you will see two vertical lines at the location of the new limits. Once you get 
the limits entered, proceed as with the expansion box. That is - left click 
anywhere to accept the new limits, or right click to keep the old limits. Of 
course the same procedure works for the y-axis limits as well.
<br clear="left">
	
<h3>Adjusting the expansion box</h3>
The above two methods are more similar than you may think, and you can 
combine them both. After an expansion box is drawn, both the x and y-cursor edit boxes 
double up and contain the limits of the expansion box. If you are not satisfied 
with the expansion box location you can edit any or all of these limits before 
accepting them via a left click.

<h3>Auto scaling</h3>

If plt is called without any <span class="mcode">'xlim'</span> or
<span class="mcode">'ylim'</span> arguments, both axes are initially auto-scaled 
to show the entire data range. At any later time you can auto-scale the x-axis 
by right clicking on the grey&nbsp;&quot;x&quot;&nbsp;label in front of the x-cursor edit box. Right 
clicking on the grey&nbsp;&quot;y&quot;&nbsp;label is similar for auto-scaling the y-axis, although 
there is one difference. The difference is that the y-axis is scaled to insure 
that the data associated with the active trace is visible. There is an alternate 
way to auto-scale that picks display limits to insure that all the traces are 
visible instead of just the active trace. (See &quot;Expansion history&quot; below).

<h3>Expansion history</h3>

Whenever you change the x or y axis limits by any of the above methods, the 
previous limits are stored in a expansion history list. You can cycle through these 
stored limits by left clicking on the 
<span class="mcode2">XY&#8596;</span> tag in 
the menu box. (See &quot;Menu&nbsp;box&quot; below). This list is 4 elements deep, so 
when you zoom or pan the fifth time the oldest display limits fall off the bottom of 
the stack. Assuming the expansion history list is full (which is usual) clicking on the 
<span class="mcode2">XY&#8596</span>
tag four times in a row will show you the last four display limits. On the fifth 
click, plt will auto-scale both the x and y axes in a way that insures that <i>
<b>all</b></i> the data for <i><b>all</b></i> traces falls inside the display 
area. On the sixth click, plt goes back to using the axis limits stored in the 
expansion history list. Although you can auto-scale by </font>clicking on the 
<span class="mcode2">XY&#8596;</span>
tag a suitable number of times that can be cumbersome since you usually don't 
know where you are in the rotation. For this reason a faster way to auto-scale 
is provided ... simply <i><b>right</b></i> click once on the 
<span class="mcode2">XY&#8596;</span> tag.</font>

<h3>Doubling or halving the display area</h3>

Left clicking the <span class="mcode">Zout</span> tag in the menu box <font face="Times New Roman">
(see &quot;Menu&nbsp;box&quot; below) zooms the display out, roughly doubling the display area. 
Right clicking zooms in, halving the display area. In both directions the center 
point of the display remains in the center after the zoom operation.</font></p>

<h3>xView slider</h3>
<img src="../images/xView.png" align="left" hspace="10" vspace="10"><br>
The black horizontal bar with the short gray segment that appears above the plot is called
the xView slider. It provides yet another way of panning and zooming the x-axis and is
particularly useful when you want to view a small segment of a long data set. The whole
bar represents the entire data set and the gray segment represents the portion of the data
currently in view. If 10% of the data is currently in view, then the length of the gray
segment will be 1/10 the length of the whole bar. Similarly the position of the gray segment
within the bar represents the position of the displayed data relative to the whole data set.
<br clear="left"><br>
<img src="../images/DataEdit.png" align="left" hspace="10" vspace="10"><br>
To bring up the xView slider, first right click on the Ycursor edit box. This will bring up
the Yedit popup menu shown here. Then select the third item in this menu (xView slider) and
the slider will appear. This is a toggle, so selecting it again will make the xView slider dissappear.
<br><br>
If you wanted to the xView slider to appear when your program starts up, you can include the string
<span class="mcode">xView</span> in the <span class="mcode">'Options'</span> parameter. Also you
can enable or disable the xView slider from the command line or in a program
with this command: <nobr><span class="mcode">plt('click','Yedit',3);</span></nobr>
<br><br>
Moving the gray segment left or right is as easy and natural as you would expect. Simply click
on the gray segment and drag it left or right. The plot underneath will update as you are
sliding allowing you to easily search for the data portion that interests you.

You can also make the gray segment larger so that a larger portion of the data is displayed.
To do this simply click in the black area to the left of the gray segment and the left edge
of the gray segment will immediately be extended to the point where you clicked. (Similar for
the right edge of course.) But notice that this method won't work if you want to make the
gray segment smaller. So how do we do it? Simple, just click in the black area, hold down the
mouse and drag. The edge that you selected will follow the mouse allowing you to place it
wherever you want. (An alternate method of making the gray segment smaller is to right click
inside the gray segment, but the first method I mentioned is usually easier.)
<br><br>
Notice that when the x-axis is zoomed or panned by any of the other methods provided, the xView
slider will automatically be updated so that the gray segment properly represents the visible
portion of the data.
<br><br>
The appearance of the xView cursor is probably suitable for most situations, but
you can modify its appearance by using the xvProps figure application data.
This is best illustrated with an example. Suppose we follow the call to plt with the expression:
<br><br>
<span class="mcode">setappdata(gcf,'xvProps', ...<br>
 &nbsp; {'color' 'red' '+color' 'blue' '+' [0 -.01 0 .02]});</span>
<br><br>
The cell array consists of property name/value pairs. If the property name does not have the "+"
prefix the property is applied to the short gray segment, so the first property pair above changes the
gray segment into a red segment. If the property name does include a "+" prefix then the property
is applied to the long horizontal black bar (which actually is an axis). So the second property pair
changes the black bar into a blue one. Any axis property name may be used. The last property pair
is a special case since it has the prefix without a property name. The meaning of this special case
is that the value specified is to be added to current position value for the horizontal bar (axis).
So what this example does is to move the (blue) horizontal bar down by 1% of the figure height and
to make the bar thicker by 2% of the figure height. (Note that you could also specify the position in
absolute terms be replacing the '+' with '+pos')
<br clear="left">

</body>

</html>