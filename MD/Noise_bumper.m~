addpath(genpath('/home/nick/HDD/Work/Matlab-scripts'));

%%

clear all

DataDir='/afs/cern.ch/work/n/nbiancac/scratch0/2015_11_17/';
ResultDir='/home/nick/HDD/Work/CERN/MD/LHC/2015/Noise_bumper/';
system(['mkdir -p ',ResultDir]);

allfiles=dir(DataDir);

allfiles(1:2)=[];
for nn=100:length(allfiles)
    
    filename=allfiles(nn).name;
    if ~isempty(strfind(filename,'VC'))
        
    ind_start=1; % start turn from injection
    ind_end=12000; % end turn FFT
    [~,~,~,E0]=particle_param('proton');
    machine=LHC_param(E0,450e9,'Nominal LHC');
    QlimitsV=[0. 40]./machine.f0; % for tune search in V
    QlimitsH=[0. 40]./machine.f0; % for tune search in H




    delta=500;
    turn_vec=[1:delta:12001];

    flagshow='off';
    flagsave=1;
    flag_plot_fft=1;



    for beam=[{'B1'},{'B2'}]
        for plane=[{'vertical'},{'horizontal'}]

            close all
            if strcmp(plane,'vertical'); Qlimits=QlimitsV; else Qlimits=QlimitsH; end
            ADT.data_new=[];
            for kk=1:length(turn_vec)-1
                turn1=turn_vec(kk);
                turn2=delta;
                try ADT.raw=h5read([DataDir,filename],['/',char(beam),'/',char(plane),],[1 turn1],[3564, turn2]); 
                    disp([char(beam),' ',char(plane),' acq. turn ',num2str(turn1),'->',num2str(turn1+delta-1)]); 
                    L=unwrap_ADT(ADT);
                    if size(L.data,1)>size(ADT.data_new,1) % means we are over injecting
                        disp('Overinjection detected: reset matrix.')
                        ADT.data_new=[L.data];
                    else
                        ADT.data_new=[ADT.data_new,L.data];
                    end
                    ADT.bucket=L.bucket;
                end
            end

            for kk=1:size(ADT.data_new,1)
                ADT.data_new(kk,:)=ADT.data_new(kk,:)-nanmean(ADT.data_new(kk,:));
            end




            if ~isempty(ADT.data_new)

                disp('Getting index of injection')
                ADT.data_cut=[];
                ADT.bucket_cut=[];

                index_start=1;
                for kk=1:size(ADT.data_new,1)    
                    ADT.data_cut=[ADT.data_cut;ADT.data_new(kk,index_start:end)];
                    ADT.bucket_cut=[ADT.bucket_cut,ADT.bucket(kk)];
                end
                ADT.data_cut_fft=ADT.data_cut(:,ind_start:ind_end);


                f_vec=[];fNAFF_vec=[];
                for ii=1:size(ADT.data_cut_fft,1);

                    ADT.data_cut_fft(ii,:)=ADT.data_cut_fft(ii,:)-mean(ADT.data_cut_fft(ii,:));
                    X=linspace(-0.5,0.5,size(ADT.data_cut_fft,2));
                    freqabs=abs(fftshift(fft(ADT.data_cut_fft(ii,:))));

                    ind=[X>0. & X< 0.5];

                    freqabs_pos=freqabs(ind);
                    freq_pos=X(ind);

                    figure(1)
                    set(gcf,'visible',flagshow)
                    p=plot(X*machine.f0,freqabs./numel(X));hold on;
                    xlim([1e-4*machine.f0 max(Qlimits).*machine.f0])
                    title(regexprep(filename,'_',' '))

                    [~,ind_m]=max(freqabs_pos);
                    f=freq_pos(ind_m);
                    f_vec=[f_vec,f];

                    newdata=ADT.data_cut_fft(ii,:);

                    nharm=50;
                    [avetune,errtune,tunes,phaseadv,amplit,numturns,frespec,nkick] = freqan(newdata',nharm,'all');
                    allfreq=abs(frespec(1:nharm,3));
                    allamp=frespec(1:nharm,4);
                    ind=[allfreq>Qlimits(1) &  allfreq<Qlimits(2)];
                    freqlimits=allfreq(ind);
                    amplimits=allamp(ind);
                    [avetuneamp,indmax]=max(amplimits);
                    avetune=freqlimits(indmax);

                    figure(1)
                    set(gcf,'visible',flagshow)
                    for kk=1:length(allamp)
                        h=line([abs(allfreq(kk)*machine.f0),abs(allfreq(kk)*machine.f0)],[1e-5,(allamp(kk))]); hold on
                        set(h,'Color','k')
                    end
    %                 xlim([Qlimits.*machine.f0])
                    xlabel('f [Hz]')
                    ylabel('|S(f)|')
                    ylim([1e-3  1e5])
                    grid on
                    title(regexprep(filename,'_',' '))
                     set(gca,'yscale','log')
                    fNAFF_vec=[fNAFF_vec,avetune];
                end


            
            figure(1)
            set(gcf,'visible',flagshow)
            legend([p,h],'FFT','NAFF')
            if flagsave 
                name=['Spectrum_',regexprep(filename,'.h5',''),'_0-50Hz_',char(beam),'_',char(plane)];
                disp(name)
                s=hgexport('readstyle','PRSTAB'); s.FixedFontSize='13';
                hgexport(gcf,'',s,'applystyle',true);
                hgexport(gcf, [ResultDir,name,'.png'],s,'Format','png');  
            end

            figure(1)
            xlim([50 100])
            set(gcf,'visible',flagshow)
            legend([p,h],'FFT','NAFF')
            if flagsave 
                name=['Spectrum_',regexprep(filename,'.h5',''),'_50-100Hz_',char(beam),'_',char(plane)];
                disp(name)
                s=hgexport('readstyle','PRSTAB'); s.FixedFontSize='13';
                hgexport(gcf,'',s,'applystyle',true);
                hgexport(gcf, [ResultDir,name,'.png'],s,'Format','png');  
            end
            end
        end
    end

    end
    
end

